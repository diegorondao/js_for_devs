//-------------------------------------------------------noEmitOnError-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Opção noEmitOnError => opção que permite o compilador gerar arquivo .js mesmo existindo erros no código .ts 
//Ex: atribuição inválida
let canal: string = 'Gaveta'
let inscritos: number = 610234

// canal = inscritos
console.log(`Canal = ${canal}`)

// let nome:string = 'Victor' //Erro! A variável foi redeclarada com o mesmo nome que já existe em outro arquivo, ou seja, estão no mesmo escopo (namespace)

// nome = 'Victor'
// console.log(`Nome = ${nome}`)


//Target => indica a versão do JavaScript que será utilizado no arquivo compilado. Por padrão, a versão é 'es5'
//sourceMap => Irá gerar um arquivo .map, que seria um arquivo de código do JavaScript original interpretado pelo navegador 

//-------------------------------------------------------noImplicityAny
//noImplicityAny => opção que não permite declaração implícita de variáveis do tipo any

// //Ex:
// function soma(a, b){ 
//  return a + b   
// }
/*Nos parâmetros de função, se deixá-los implícitos como sendo any, o compilador, por padrão, 
gera erro pois como uma função pode ser chamada de várias formas, o compilador não sabe qual tipo de dado que os parâmetros 
estão sendo tratados*/

//Em funções aninhadas também ocorre o mesmo efeito

//Neste caso, não ocorrerá erro, pois o compilador consegue mapear o tipo dos dados que estão sendo atribuídos a uma variável
let qualquerCoisa
qualquerCoisa = 12
qualquerCoisa = 'abc'


//-------------------------------------------------------strictNullChecks
//strictNullChecks => opção que permite o compilador validar a checagem de nulos a variáveis. Isso é comum quando a variável é usada antes de ser atribuída
//Ex:
// function saudar(isManha: boolean): string{
//     let saudacao: string
//     if(isManha){
//         saudacao = 'Bom dia'
//     }
    
//     return saudacao
// }

/*Neste caso, como a variável saudacao já está sendo usada no return antes de ser atribuída, o compilador, por padrão, 
gera erro quando ela ainda não recebeu nenhum valor. Logo, ela está recebendo null de início, a menos que coloque um else 
para atribuir um valor do mesmo tipo que o compilador não gera erro.*/


//-------------------------------------------------------noUnusedParameters
//noUnusedParameters => opção que permite o compilador gerar erro quando um parâmetro da função não está sendo utilizada
//Ex:
// function saudar(isManha: boolean, horas: number): string{ //parâmetro horas não sendo utilizada no código
//     let saudacao: string
//     if(isManha){
//         saudacao = 'Bom dia'
//     }
//     else{
//         saudacao = 'Tenha uma ótima semana!'
//     }
    
//     return saudacao
// }


//-------------------------------------------------------noUnusedLocals
//noUnusedLocals => opção que permite o compilador gerar erros quando uma variável local de uma função ou que estejam dentro de um outro bloco de código, não está sendo usada
// Ex:
// function saudar(isManha: boolean, horas: number): string{ //parâmetro horas não sendo utilizada no código
//     let saudacao: string
//     let a = 123; //Variável local que foi atribuída, mas não foi usada
//     if(isManha){
//         saudacao = 'Bom dia'
//     }
//     else{
//         saudacao = 'Tenha uma ótima semana!'
//     }
    
//     return saudacao
// }


//-------------------------------------------------------outDir
//outDir => define a pasta onde serão gerados os arquivos .js compilados. Por padrão, os arquivos são gerados na pasta raíz da aplicação

//-------------------------------------------------------outFile
/*outFile => Será criado um arquivo .js com o código de todos os arquivos .js gerados separadamente de uma só vez.
Porém, ela não é compatível com o sistem de módulos do commonjs. Portanto, teria que mudar para o sistema de módulos que 
o suporta (ex: system)*/